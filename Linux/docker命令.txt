
说明： 
一般用 bash 命令进入的容器，提示符会变成root用户的，如 [root@ee8ba7680333 /]#
一般用 sh 命令进入容器，提示符可能不会带用户，可能情况：sh-4.1#、#
容器是一个简化版的系统环境，只有比较基础的命令，cd vi mv cp等，默认是没有vim命令的

2. 从容器里退出的命令:
exit

3. 不进入容器的方式执行容器里的命令
docker exec -it container_name cmd
其中cmd为要执行的命令，此命令在容器中必须存在

实例：
docker exec -it guoxinsuo_hf ls

4. 重启容器的命令：
docker restart container_name
成功后命令行会返回容器的名字。

实例：重启汇付环境的服务
docker restart guoxinsuo_hf

重启包含了停止和启动
docker stop container_name
docker start container_name

5. 查看所有正在运行的容器：
docker ps

如果运行容器太多，可用grep过滤
docker ps|grep guoxinsuo
docker ps|grep mysql



----------------------------study------------------------------
http://www.manongjc.com/article/33389.html

#清理docker环境 
docker ps -q | xargs docker stop | xargs docker rm

#查看容器详情
docker inspect

#查看版本
docker version
#查找镜像
docker search mysql

#拉取镜像 版本为5.7
docker pull mysql:5.6

#查看镜像
docker images 

#删除镜像
docker rmi imageid


#启动容器 --name 起的名字 -d 后台运行，不打印日志 
docker run --name myName -d tomcat

#查看运行的容器 -a 可以查看所有状态的容器
docker ps

#停止运行的容器
docker stop 容器id
#直接停止容器
docker kill 容器名 

#再次启动容器
docker start 容器id

#删除容器
docker rm 容器id

#启动一个做了端口映射的容器 先stop容器。 主机端口:容器内部端口 \imageName为镜像名称
docker run -d -p 8888:8080 imageName

#查看容器日志
docker logs containerName/容器id

docker logs [-f] [-t] [--tail] 容器名
-f --follows=true | false 默认为false 一直跟踪日志的变化并返回结果
-t --timestamps=true | false 默认为false 在返回的结果上加上时间戳
–tail= ‘all’ 选择结尾处多少数量的日志，不指定返回所有的日志

#查看容器内的进程
docker top 容器名

#登录守护式容器方式：
docker exec -it 容器名称 (或者容器ID)  /bin/bash

退出 exec

拷贝宿主文件到容器：
docker cp 宿主目录/文件  id:容器目录

拷贝宿主文件到主机 
docker cp 容器名:容器里面的路径  宿主机的相应路径 



----------------------docker 安装
1
 sudo yum remove docker \
 docker-client \
 docker-client-latest \
 docker-common \
 docker-latest \
 docker-latest-logrotate \
 docker-logrotate \
 docker-engine
 
 
 （ yum remove docker-ce 
    rm -rf /var/lib/docker
	检查 rpm -qa | grep docker
	docker remove xxxx
  ）
 
 2
 sudo yum install -y yum-utils \
 device-mapper-persistent-data \
 lvm2
 
 3
 sudo yum-config-manager \
 --add-repo \
 https://download.docker.com/linux/centos/docker-ce.repo
 
 4
 yum install docker-ce docker-ce-cli containerd.io
 
 5、启动Docker。
  systemctl start docker
 
 6、验证
 docker -v
 
 自动补齐：
 yum install bash-completion
 
----------------------安装mysql:
  cat  /etc/redhat-release   //查看系统版本
  
  1、拉取镜像
	docker pull mysql:5.7
  
  2、运行mysql镜像
	docker run -p 3306:3306 --name mymysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7
  
  3、进入mysql容器
	docker exec -it mymysql mysql -u root -p
  
  4、修改用户密码
	set password for root@localhost = password('123456');  #本地登录密码
	set password for root@'%' = password('123456');        #远程登录密码
	
	CREATE USER qinsen@localhost IDENTIFIED BY 'QSpassword';
	Delete FROM user Where User='qinsen' and Host='localhost';

	grant all privileges on  *.*  to qinsen@'%' identified by 'QSpassword' ;
	flush privileges;